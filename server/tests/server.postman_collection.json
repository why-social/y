{
	"info": {
		"_postman_id": "3fbdcd8f-fb44-4455-a324-71aa10965952",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38093461"
	},
	"item": [
		{
			"name": "USERS",
			"item": [
				{
					"name": "get invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "asdf",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/123sd",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"123sd"
							]
						}
					},
					"response": []
				},
				{
					"name": "get invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "asdf",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/66e76ceeae466024710b57ff",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"66e76ceeae466024710b57ff"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){",
									"    pm.environment.set(\"user1\", pm.response.json().user_id);",
									"    pm.environment.set(\"token1\", pm.response.json().token);",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"username1\", \"rizzvand1\");\r",
									"pm.environment.set(\"password1\", \"megaPassSmolPipi*3d\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu One\",\n    \"email\": \"razvavnananna@gmail.com\",\n    \"username\": \"{{username1}}\",\n    \"password\": \"{{password1}}\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get new user 1 without auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get new user 1 with auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){",
									"    pm.environment.set(\"user2\", pm.response.json().user_id);",
									"    pm.environment.set(\"token2\", pm.response.json().token);",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu Two\",\n    \"email\": \"asddsddsf@hot.com\",\n    \"password\": \"megaPassSmolPipi*3d\",\n    \"username\": \"rizzvand2\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get new user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user 1 follows 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu Two\",\n    \"email\": \"asddsddsf@hot.com\",\n    \"password\": \"megaPassSmolPipi*3d\",\n    \"username\": \"rizzvand2\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/following/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"following",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get followers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json()[0];",
									"    var razvan1ID = pm.environment.get(\"user1\");",
									"    var razvan2ID = pm.environment.get(\"user2\");",
									"    pm.expect(jsonData.follower).to.eql(razvan1ID);",
									"    pm.expect(jsonData.follows).to.eql(razvan2ID);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user1}}/following",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user1}}",
								"following"
							]
						}
					},
					"response": []
				},
				{
					"name": "user 2 follows 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu Two\",\n    \"email\": \"asddsddsf@hot.com\",\n    \"password\": \"megaPassSmolPipi*3d\",\n    \"username\": \"rizzvand2\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/following/{{user1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"following",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "name change",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu name change\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/{{user1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "user1 unfollows user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/following/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"following",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){",
									"    pm.environment.set(\"user3\", pm.response.json().user_id);",
									"    pm.environment.set(\"token3\", pm.response.json().token);",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rizzvan Albu Three\",\n    \"email\": \"asddsddsf@mail.com\",\n    \"password\": \"megaPassSmolPipi*3d\",\n    \"username\": \"rizzvand3\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token3}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user3}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test if user3 is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User is not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user3}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user3}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POSTS",
			"item": [
				{
					"name": "Post Creation / getting",
					"item": [
						{
							"name": "User 2 Creates a post (text only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201){\r",
											"    pm.environment.set(\"user2_post1\", pm.response.json().id);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"author\" : \"{{user2}}\",\r\n    \"content\" : \"Hello from Postman!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "User 2 Creates a post (text + image)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201){\r",
											"    pm.environment.set(\"user2_post2\", pm.response.json().id);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"author\" : \"{{user2}}\",\r\n    \"content\" : \"Hello from Postman 2!\",\r\n    \"images\" : [\"a31079acc053093931cb18d758bc29d01ecbc82692adf2fba36654fc84861eb5\"] // TODO : update to new POST\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "User 1 Creates a post (images)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201){\r",
											"    pm.environment.set(\"user1_post1\", pm.response.json().id);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"author\" : \"{{user1}}\",\r\n    \"images\" : [\"25a3b47494a02cb7452899bdcda8281049cdb57afc6ff62852efc1757cd17bde\", \"96ae7c6a4238f627ae3c0a136ba6dd36701dd4e3d616a2a8fb1c01f1856b4f62\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Author matches the creator\", function () {\r",
											"    var post = pm.response.json();\r",
											"    pm.expect(post.author).to.equal(pm.environment.get(\"user1\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all posts of User2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"There are 2 posts\", function () {\r",
											"    pm.expect(pm.response.json().length).to.equal(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/user/{{user2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"user",
										"{{user2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Likes",
					"item": [
						{
							"name": "User2 likes User1's post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}/likes/{{user2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}",
										"likes",
										"{{user2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check if user1's post is liked by user2 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Post is liked\", function () {\r",
											"    pm.expect(pm.response.json().liked).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}/likes/{{user2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}",
										"likes",
										"{{user2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "User2 unlikes User1's post Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}/likes/{{user2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}",
										"likes",
										"{{user2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check if user1's post is unliked by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Post is not liked\", function () {\r",
											"    pm.expect(pm.response.json().liked).to.be.false;\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}/likes/{{user2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}",
										"likes",
										"{{user2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Editing",
					"item": [
						{
							"name": "Update post content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content is updated\", function () {\r",
											"    pm.expect(pm.response.json().content).to.equal(\"Look mom, I'm on TV!\"); \r",
											"});\r",
											"\r",
											"pm.test(\"Post is edited\", function () {\r",
											"    pm.expect(pm.response.json().is_edited).to.be.true; \r",
											"});\r",
											"\r",
											"pm.test(\"Previous (unedited) content is preserved\", function () {\r",
											"    pm.expect(pm.response.json().images.length).to.equal(2); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : \"Look mom, I'm on TV!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Deletion",
					"item": [
						{
							"name": "Delete a post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"DB entry is preserved\", function () {\r",
											"    pm.expect(pm.response.json()).to.not.be.undefined; \r",
											"});\r",
											"\r",
											"pm.test(\"Content is null\", function () {\r",
											"    pm.expect(pm.response.json().content).to.be.null;\r",
											"    pm.expect(pm.response.json().images).to.be.null; \r",
											"});\r",
											"\r",
											"pm.test(\"Flagged as deleted\", function () {\r",
											"    pm.expect(pm.response.json().is_deleted).to.be.true; \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Can't update a deleted post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : \"UNDELETE ME!!!!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post1}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "COMMENTS",
			"item": [
				{
					"name": "Add comment to a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set(\"comment1\", pm.response.json().id);\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\" : \"HI!!!\",\r\n    \"parent_id\" : \"{{user2_post1}}\",\r\n    \"parent_is_post\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/comments",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment to a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set(\"comment2\", pm.response.json().id);\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\" : \"its 2am help me\",\r\n    \"parent_id\" : \"{{user2_post1}}\",\r\n    \"parent_is_post\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/comments",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add comment to a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\" : \"Exhaustive testing is exhaustive >.< \",\r\n    \"parent_id\" : \"{{comment1}}\",\r\n    \"parent_is_post\" : false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/comments",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "User likes a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment1}}/likes/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment1}}",
								"likes",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User likes a comment Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token2}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment2}}/likes/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment2}}",
								"likes",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Comment is liked by user2\", function () {\r",
									"    pm.expect(pm.response.json().likes).to.contain(pm.environment.get(\"user2\"));\r",
									"});\r",
									"\r",
									"pm.test(\"HATEOAS\", function () {\r",
									"    pm.expect(pm.response.json()._links).to.not.be.undefined;\r",
									"    pm.expect(pm.response.json()._links.user.href).to.contain(pm.environment.get(\"user1\"));\r",
									"    pm.expect(pm.response.json()._links.parent.href).to.contain(pm.environment.get(\"user2_post1\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all comments by a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"There are 2 comments\", function () {\r",
									"    pm.expect(pm.response.json().length).to.equal(2);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/user/{{user1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"user",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment 2 is liked by User2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Is liked\", function () {\r",
									"    pm.expect(pm.response.json().likes).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment2}}/likes/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment2}}",
								"likes",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content is changed\", function () {\r",
									"    pm.expect(pm.response.json().content).to.equal(\"No help needed im fine :)))))\");\r",
									"});\r",
									"\r",
									"pm.test(\"Edit registered\", function () {\r",
									"    pm.expect(pm.response.json().is_edited).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\" : \"No help needed im fine :)))))\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "(PATCH) Edit a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content is changed\", function () {\r",
									"    pm.expect(pm.response.json().content).to.equal(\"hackerman\");\r",
									"});\r",
									"\r",
									"pm.test(\"Edit registered\", function () {\r",
									"    pm.expect(pm.response.json().is_edited).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-http-method-override",
								"value": "PATCH",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\" : \"hackerman\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User un-likes a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token2}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment1}}/likes/{{user2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment1}}",
								"likes",
								"{{user2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if un-liked",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Comment is not liked by user2 anymore\", function () {\r",
									"    pm.expect(pm.response.json().likes).to.not.contain(pm.environment.get(\"user2\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"DB entry is preserved\", function () {\r",
									"    pm.expect(pm.response.json()).to.not.be.undefined; \r",
									"});\r",
									"\r",
									"pm.test(\"Content is null\", function () {\r",
									"    pm.expect(pm.response.json().content).to.be.null;\r",
									"    pm.expect(pm.response.json().images).to.be.null; \r",
									"});\r",
									"\r",
									"pm.test(\"Flagged as deleted\", function () {\r",
									"    pm.expect(pm.response.json().is_deleted).to.be.true; \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "(DELETE) Delete a comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"DB entry is preserved\", function () {\r",
									"    pm.expect(pm.response.json()).to.not.be.undefined; \r",
									"});\r",
									"\r",
									"pm.test(\"Content is null\", function () {\r",
									"    pm.expect(pm.response.json().content).to.be.null;\r",
									"    pm.expect(pm.response.json().images).to.be.null; \r",
									"});\r",
									"\r",
									"pm.test(\"Flagged as deleted\", function () {\r",
									"    pm.expect(pm.response.json().is_deleted).to.be.true; \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-http-method-override",
								"value": "DELETE",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v1/comments/{{comment1}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"comments",
								"{{comment1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOGIN & RESTORE",
			"item": [
				{
					"name": "Log in to User1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){\r",
									"    pm.environment.set(\"token1\", pm.response.json().token); // update the token env variable\r",
									"}\r",
									"\r",
									"pm.test(\"Status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"User id matches\", function () {\r",
									"    pm.expect(pm.response.json()).to.be.an('object');\r",
									"    pm.expect(pm.response.json().user_id).to.exist.and.to.be.a('string');\r",
									"    pm.expect(pm.response.json().user_id).to.exist.and.to.equal(pm.environment.get(\"user1\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username1}}\",\r\n    \"password\": \"{{password1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if (new) token is valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set(\"user1_post1\", pm.response.json().id);\r",
									"}\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"author\" : \"{{user1}}\",\r\n    \"content\" : \"Just logged in\",\r\n    \"images\" : [\"25a3b47494a02cb7452899bdcda8281049cdb57afc6ff62852efc1757cd17bde\", \"96ae7c6a4238f627ae3c0a136ba6dd36701dd4e3d616a2a8fb1c01f1856b4f62\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/posts/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user with a real email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){",
									"    pm.environment.set(\"forgetful_user\", pm.response.json().user_id);",
									"}",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", \"m.orlov10@gmail.com\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pwnd\",\n    \"email\": \"{{email}}\",\n    \"password\": \"iWillForgetThisInAbout100milliseconds!\",\n    \"username\": \"analburazv\",\n    \"birthday\": \"1990-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Request password restoration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"*/\r",
									"\r",
									"console.log(\"EMAIL TEST DISABLED\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{forgetful_user}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/restorePassword",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"restorePassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IMAGES",
			"item": [
				{
					"name": "Create a post with a real image",
					"item": [
						{
							"name": "User 1 Creates a post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201){\r",
											"    pm.environment.set(\"user1_post2\", pm.response.json().id);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"author\" : \"{{user1}}\",\r\n    \"content\" : \"Testing image upload\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Add image to the post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.response.code == 201){\r",
											"    pm.environment.set(\"image1\", pm.response.json().images[0]);\r",
											"}\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": "./tests/testImage.png"
										}
									]
								},
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post2}}/images",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post2}}",
										"images"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/images/{{image1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"images",
										"{{image1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete an image",
					"item": [
						{
							"name": "Cannot delete an image in use",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/images/{{image1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"images",
										"{{image1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete the post using the image",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token1}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/posts/{{user1_post2}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{user1_post2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete the image",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/images/{{image1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"images",
										"{{image1}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}